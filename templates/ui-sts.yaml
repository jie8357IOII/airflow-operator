apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{.Name}}
  namespace: {{.Namespace}}
  labels:
    {{range $k,$v := .Labels }}
    {{$k}}: {{$v}}
    {{end}}
  annotations:
    {{range $k,$v := .Cluster.Spec.Annotations }}
    {{$k}}: {{$v}}
    {{end}}
spec:
  replicas: {{.Cluster.Spec.UI.Replicas}}
  selector:
    matchLabels:
      {{range $k,$v := .Selector }}
      {{$k}}: {{$v}}
      {{end}}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        {{range $k,$v := .Labels }}
        {{$k}}: {{$v}}
        {{end}}
      annotations:
        {{range $k,$v := .Cluster.Spec.Annotations }}
        {{$k}}: {{$v}}
        {{end}}
    spec:
      terminationGracePeriodSeconds: 30
      nodeSelector:
        {{range $k,$v := .Cluster.Spec.NodeSelector }}
        {{$k}}: {{$v}}
        {{end}}
      containers:
      - name: airflow-ui
        args:
        - webserver
        image: {{.Cluster.Spec.UI.Image}}:{{.Cluster.Spec.UI.Version}}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: web
            scheme: HTTP
          initialDelaySeconds: 100
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 2
        ports:
        - containerPort: 8080
          name: web
          protocol: TCP
        volumeMounts:
        - mountPath: /usr/local/airflow/dags/
          name: dags-data
      volumes:
      - emptyDir: {}
        name: dags-data
